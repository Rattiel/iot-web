server {
    listen 80;
    access_log off;

    server_name http://console.grepfa.com;
    charset utf-8;

    location / {
        proxy_pass http://spring:8080;
        proxy_set_header Host $host:$server_port;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

     location ^~ /iot/api {
          rewrite ^/(iot)/(api)/(.*)$ /$2/$3 break;
          proxy_pass http://spring:8080/$2/$3;

          # rewrite된 요청을 websocket 통신으로 변경하기 위한 추가 헤더입니다.
          # 아래 항목들이 추가되어야만 websocket 사용이 가능합니다.
          proxy_http_version      1.1;

          # 초기에 client 요청 url이 wss://test/api/socket 과 같이 websocket protocol 일 경우
          # hop by hop header인 Upgrade 와Connection header 가 hop by hop header의 특성인 다음 커넥션에 전달되지않은 특성으로 인하여
          # 명시적으로 다시 선언해줘야합니다.
          # 그렇기에 $http_upgrade 를 통하여 client 요청 header에서 Upgrade: websocket 정보를 읽어와
          # Upgrade header를 넣어주고
          # Connection header에 이 패킷이 Upgrade될 패킷임을 웹서버가 알 수 있도록 Connection "upgrade" 를 넣어줍니다.
          proxy_set_header       Upgrade $http_upgrade;
          proxy_set_header       Connection "upgrade";
          proxy_set_header Host $host;
      }
}